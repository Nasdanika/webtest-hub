<%@ jet package="org.nasdanika.webtest.hub.impl" class="ApplicationsControllerGenerator"%>

require(["<%=argument%>.js", 'q'], function(hub, Q) {
	angular.module('hubApp', ['ngSanitize']).controller('ApplicationsController', ['$scope', '$sce', function ($scope, $sce) {  	 
		function applyModelChanges() {
	    	Q.all(hub.applications.map(function(app) { return app().summaryRow })).then(function (summaryRows) {
	    		for (var i in summaryRows) {
	    			summaryRows[i].name = $sce.trustAsHtml(summaryRows[i].name);
	    		}
	    		$scope.hubApplicationsSummary = summaryRows;
	    		$scope.$apply();			
				jQuery("#appOverlay").css("display", "none");
	    	}).done();
		};

		function onError(error) {
			jQuery("#appOverlay").css("display", "none");
			console.trace(error);
			alert(error);
		};
		
		function showOverlay() {
			jQuery('#appOverlay').width(jQuery('#appContainer').width());
			jQuery('#appOverlay').height(jQuery('#appContainer').height());
			jQuery("#appOverlay").css("display", "block");		
		};		
		   
    	$scope.hub = hub;
    	
    	Q.all(hub.applications.map(function(app) { return app().summaryRow })).then(function (summaryRows) {
    		for (var i in summaryRows) {
    			summaryRows[i].name = $sce.trustAsHtml(summaryRows[i].name);
    		}
    		$scope.hubApplicationsSummary = summaryRows;
    		$scope.$apply();
    	}).done();
    	
    	$scope.appName = function(app) {
    		return typeof app === 'function' ? app().name : app.name;
    	};

		var appPropertyDescriptor = Object.getOwnPropertyDescriptor(hub, "applications");
		$scope.canAddApp = appPropertyDescriptor!==undefined && appPropertyDescriptor.hasOwnProperty("set");
		
		$scope.deleteApp = function(path) {
			require([path+".js"], function(app) {			
				if (confirm("Do you really want to delete application "+app.name+"?")) {
					showOverlay();
					app.$delete().then(applyModelChanges, onError).done();
				}
			});
		};
		
		$scope.newApplicationData = { };

		$scope.addApp = function() {
			var hubApps = hub.applications;
			for (var ak in hubApps) {
				console.log(hubApps[ak]().name);
				console.dir($scope.newApplicationData);
				if (hubApps[ak]().name === $scope.newApplicationData.name) {
					$scope.newAppErrorMessage = "Duplicate application name";
					return;
				}
			}
			hub.applications.push($scope.newApplicationData);
			hub.$store().then(
				function() {
					$scope.newApplicationData = {};
					delete $scope.newAppErrorMessage;
					$scope.$apply();
					var newAppModal = angular.element("#newAppFormModal");
					newAppModal.on('hidden.bs.modal', function (e) {
						var apps = hub.applications;
						var route = 'router/main/'+apps[apps.length-1].$path+'.html';
						workspace.navigate(route, { trigger : true });
					});
					newAppModal.modal('hide');
				},
				function(error) {
					$scope.newAppErrorMessage = error;
				}).done();
		};      
		
		jQuery("#appOverlay").css("display", "none");
      
	}]);
    
	angular.bootstrap(jQuery("#applicationPanel"), ['hubApp']);
});